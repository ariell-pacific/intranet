{"ast":null,"code":"import { setSystemSnackbar } from '../system/actions';\nconst errorHandler = function (e, dispatch) {\n  let autoHide = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const err = e;\n  if (err.response && err.response.data) {\n    const {\n      data\n    } = err.response;\n    if (Array.isArray(data)) {\n      let message = data[0].message === 'Invalid value' ? 'Incorrect username / password.' : data[0].message;\n      if (data[0].property === 'oldPassword') message = 'Incorrect old password.';\n      dispatch(setSystemSnackbar({\n        open: true,\n        type: 'error',\n        message\n      }));\n    } else if (typeof data === 'string') {\n      // generic error\n      dispatch(setSystemSnackbar({\n        open: true,\n        type: 'error',\n        message: 'Unknown error. Please contact the administrator'\n      }));\n    } else {\n      dispatch(setSystemSnackbar({\n        open: true,\n        type: 'error',\n        message: data.message\n      }));\n    }\n  } else if (e instanceof Error) {\n    dispatch(setSystemSnackbar({\n      open: true,\n      type: 'error',\n      message: e.message\n    }));\n  }\n  if (!autoHide) return;\n  setTimeout(() => {\n    dispatch(setSystemSnackbar(null));\n  }, 3000);\n};\nexport default errorHandler;","map":{"version":3,"names":["setSystemSnackbar","errorHandler","e","dispatch","autoHide","err","response","data","Array","isArray","message","property","open","type","Error","setTimeout"],"sources":["C:/Users/aao/Desktop/GoingUAT/src/store/utils/errorHandler.ts"],"sourcesContent":["import { AxiosResponse } from 'axios';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AppState } from '../index';\nimport { setSystemSnackbar } from '../system/actions';\n\ninterface ValidationError {\n  property: string;\n  value: string;\n  message: string;\n}\ninterface GenericError {\n  message?: string;\n}\nconst errorHandler = (\n  e: unknown | Error,\n  dispatch: ThunkDispatch<AppState, unknown, AnyAction>,\n  autoHide: boolean = true\n) => {\n  const err = e as {\n    response?: AxiosResponse<{ data: Array<ValidationError> | GenericError }>;\n  };\n  if (err.response && err.response.data) {\n    const { data } = err.response;\n    if (Array.isArray(data)) {\n      let message =\n        data[0].message === 'Invalid value'\n          ? 'Incorrect username / password.'\n          : data[0].message;\n\n      if (data[0].property === 'oldPassword')\n        message = 'Incorrect old password.';\n\n      dispatch(setSystemSnackbar({ open: true, type: 'error', message }));\n    } else if (typeof data === 'string') {\n      // generic error\n      dispatch(\n        setSystemSnackbar({\n          open: true,\n          type: 'error',\n          message: 'Unknown error. Please contact the administrator'\n        })\n      );\n    } else {\n      dispatch(\n        setSystemSnackbar({\n          open: true,\n          type: 'error',\n          message: (data as GenericError).message as string\n        })\n      );\n    }\n  } else if (e instanceof Error) {\n    dispatch(\n      setSystemSnackbar({\n        open: true,\n        type: 'error',\n        message: e.message\n      })\n    );\n  }\n\n  if (!autoHide) return;\n\n  setTimeout(() => {\n    dispatch(setSystemSnackbar(null));\n  }, 3000);\n};\nexport default errorHandler;\n"],"mappings":"AAIA,SAASA,iBAAiB,QAAQ,mBAAmB;AAUrD,MAAMC,YAAY,GAAG,UACnBC,CAAkB,EAClBC,QAAqD,EAElD;EAAA,IADHC,QAAiB,uEAAG,IAAI;EAExB,MAAMC,GAAG,GAAGH,CAEX;EACD,IAAIG,GAAG,CAACC,QAAQ,IAAID,GAAG,CAACC,QAAQ,CAACC,IAAI,EAAE;IACrC,MAAM;MAAEA;IAAK,CAAC,GAAGF,GAAG,CAACC,QAAQ;IAC7B,IAAIE,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;MACvB,IAAIG,OAAO,GACTH,IAAI,CAAC,CAAC,CAAC,CAACG,OAAO,KAAK,eAAe,GAC/B,gCAAgC,GAChCH,IAAI,CAAC,CAAC,CAAC,CAACG,OAAO;MAErB,IAAIH,IAAI,CAAC,CAAC,CAAC,CAACI,QAAQ,KAAK,aAAa,EACpCD,OAAO,GAAG,yBAAyB;MAErCP,QAAQ,CAACH,iBAAiB,CAAC;QAAEY,IAAI,EAAE,IAAI;QAAEC,IAAI,EAAE,OAAO;QAAEH;MAAQ,CAAC,CAAC,CAAC;IACrE,CAAC,MAAM,IAAI,OAAOH,IAAI,KAAK,QAAQ,EAAE;MACnC;MACAJ,QAAQ,CACNH,iBAAiB,CAAC;QAChBY,IAAI,EAAE,IAAI;QACVC,IAAI,EAAE,OAAO;QACbH,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH,CAAC,MAAM;MACLP,QAAQ,CACNH,iBAAiB,CAAC;QAChBY,IAAI,EAAE,IAAI;QACVC,IAAI,EAAE,OAAO;QACbH,OAAO,EAAGH,IAAI,CAAkBG;MAClC,CAAC,CAAC,CACH;IACH;EACF,CAAC,MAAM,IAAIR,CAAC,YAAYY,KAAK,EAAE;IAC7BX,QAAQ,CACNH,iBAAiB,CAAC;MAChBY,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE,OAAO;MACbH,OAAO,EAAER,CAAC,CAACQ;IACb,CAAC,CAAC,CACH;EACH;EAEA,IAAI,CAACN,QAAQ,EAAE;EAEfW,UAAU,CAAC,MAAM;IACfZ,QAAQ,CAACH,iBAAiB,CAAC,IAAI,CAAC,CAAC;EACnC,CAAC,EAAE,IAAI,CAAC;AACV,CAAC;AACD,eAAeC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}