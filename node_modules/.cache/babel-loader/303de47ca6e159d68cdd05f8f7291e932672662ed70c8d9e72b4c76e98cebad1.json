{"ast":null,"code":"import { apiClient } from '../../utils/api';\nimport errorHandler from '../utils/errorHandler';\nimport { LOAD_LINK_DATA, SET_LINK_STATUS, CALL_LINK_API, SET_LINK_STATUS_FAILED } from './type';\n\n// SYNC ACTIONS\nconst loadLinkData = data => ({\n  type: LOAD_LINK_DATA,\n  payload: {\n    data\n  }\n});\nexport const setLoadStatus = () => {\n  return {\n    type: CALL_LINK_API\n  };\n};\nexport const setLinkStatus = () => {\n  return {\n    type: SET_LINK_STATUS\n  };\n};\nexport const callAuthFailed = err => {\n  return {\n    type: SET_LINK_STATUS_FAILED,\n    payload: err\n  };\n};\n\n// ASYNC ACTIONS\nexport const fetchLink = () => async dispatch => {\n  dispatch(setLoadStatus());\n  try {\n    const feedback = await apiClient.request({\n      url: 'PCSystemsAPI/Api/Maintenance/Helpdesk/Links/Get'\n    });\n    dispatch(loadLinkData(feedback.data[`hdLinks`]));\n    dispatch(setLinkStatus());\n  } catch (err) {\n    dispatch(callAuthFailed(err.message));\n    errorHandler(err, dispatch);\n  }\n};","map":{"version":3,"names":["apiClient","errorHandler","LOAD_LINK_DATA","SET_LINK_STATUS","CALL_LINK_API","SET_LINK_STATUS_FAILED","loadLinkData","data","type","payload","setLoadStatus","setLinkStatus","callAuthFailed","err","fetchLink","dispatch","feedback","request","url","message"],"sources":["C:/Users/aao/Desktop/GoingUAT/src/store/links/actions.ts"],"sourcesContent":["import { apiClient } from '../../utils/api';\nimport { AppThunk } from '../index';\nimport errorHandler from '../utils/errorHandler';\nimport {\n  LinkAction,\n  LinksState,\n  LOAD_LINK_DATA,\n  SET_LINK_STATUS, CALL_LINK_API, SET_LINK_STATUS_FAILED,\n} from './type';\n\n// SYNC ACTIONS\nconst loadLinkData = (\n  data: LinksState['data']\n): LinkAction => ({\n  type: LOAD_LINK_DATA,\n  payload: {\n    data\n  }\n});\n\nexport const setLoadStatus = (): LinkAction => {\n  return{\n  type: CALL_LINK_API\n  }\n};\n\nexport const setLinkStatus = (): LinkAction => {\n  return {\n    type: SET_LINK_STATUS\n  };\n};\n\nexport const callAuthFailed = (err: string | null): LinkAction => {\n  return {\n    type: SET_LINK_STATUS_FAILED,\n    payload: err\n  };\n};\n\n\n// ASYNC ACTIONS\nexport const fetchLink = (): AppThunk => async (dispatch) => {\n  dispatch(setLoadStatus());\n  try {\n      const feedback = await apiClient.request({\n      url: 'PCSystemsAPI/Api/Maintenance/Helpdesk/Links/Get'\n    });\n    dispatch(loadLinkData(feedback.data[`hdLinks`]));\n    dispatch(setLinkStatus());\n  }  catch (err: any) {\n    dispatch(callAuthFailed(err.message));\n    errorHandler(err, dispatch);\n  }\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAE3C,OAAOC,YAAY,MAAM,uBAAuB;AAChD,SAGEC,cAAc,EACdC,eAAe,EAAEC,aAAa,EAAEC,sBAAsB,QACjD,QAAQ;;AAEf;AACA,MAAMC,YAAY,GAChBC,IAAwB,KACR;EAChBC,IAAI,EAAEN,cAAc;EACpBO,OAAO,EAAE;IACPF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMG,aAAa,GAAG,MAAkB;EAC7C,OAAM;IACNF,IAAI,EAAEJ;EACN,CAAC;AACH,CAAC;AAED,OAAO,MAAMO,aAAa,GAAG,MAAkB;EAC7C,OAAO;IACLH,IAAI,EAAEL;EACR,CAAC;AACH,CAAC;AAED,OAAO,MAAMS,cAAc,GAAIC,GAAkB,IAAiB;EAChE,OAAO;IACLL,IAAI,EAAEH,sBAAsB;IAC5BI,OAAO,EAAEI;EACX,CAAC;AACH,CAAC;;AAGD;AACA,OAAO,MAAMC,SAAS,GAAG,MAAgB,MAAOC,QAAQ,IAAK;EAC3DA,QAAQ,CAACL,aAAa,EAAE,CAAC;EACzB,IAAI;IACA,MAAMM,QAAQ,GAAG,MAAMhB,SAAS,CAACiB,OAAO,CAAC;MACzCC,GAAG,EAAE;IACP,CAAC,CAAC;IACFH,QAAQ,CAACT,YAAY,CAACU,QAAQ,CAACT,IAAI,CAAE,SAAQ,CAAC,CAAC,CAAC;IAChDQ,QAAQ,CAACJ,aAAa,EAAE,CAAC;EAC3B,CAAC,CAAE,OAAOE,GAAQ,EAAE;IAClBE,QAAQ,CAACH,cAAc,CAACC,GAAG,CAACM,OAAO,CAAC,CAAC;IACrClB,YAAY,CAACY,GAAG,EAAEE,QAAQ,CAAC;EAC7B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}